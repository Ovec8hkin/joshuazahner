{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["ResearchIndexPage","data","pageTitle","active","className","href","icon","faEnvelope","size","faTwitter","faGithub","faFacebook","pageQuery","NavItem","render","this","props","title","to","link","React","Component","Header","StyledName","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","defaultProps","siteTitle","Layout","children","console","log","site","siteMetadata"],"mappings":"6FAAA,0JAsCeA,UAzBW,SAAC,GAAD,EAAEC,KAAF,OACxB,kBAAC,IAAD,CAAQC,UAAW,WAAYC,OAAQ,SACrC,4jBACA,2jBACA,4ZACA,yBAAKC,UAAW,YACd,0CACA,yBAAKA,UAAW,UACd,uBAAGC,KAAM,gCAAiCD,UAAW,eACnD,kBAAC,IAAD,CAAiBE,KAAMC,IAAYC,KAAM,QAE3C,uBAAGH,KAAM,mCAAoCD,UAAW,eACtD,kBAAC,IAAD,CAAiBE,KAAMG,IAAWD,KAAM,QAE1C,uBAAGH,KAAM,+BAAgCD,UAAW,eAClD,kBAAC,IAAD,CAAiBE,KAAMI,IAAUF,KAAM,QAEzC,uBAAGH,KAAM,2CAA4CD,UAAW,eAC9D,kBAAC,IAAD,CAAiBE,KAAMK,IAAYH,KAAM,YAS5C,IAAMI,EAAS,c,kJCjChBC,E,gLACJC,OAAA,WACE,OACE,wBAAIV,UAAU,YACZ,kBAAC,OAAD,CAAMA,UAAS,aAAcW,KAAKC,MAAMb,SAAWY,KAAKC,MAAMC,MAAQ,OAAS,IACzEC,GAAIH,KAAKC,MAAMG,MAAOJ,KAAKC,MAAMC,S,GALzBG,IAAMC,WAWtBC,EAAS,SAAC,GAAD,IAAGnB,EAAH,EAAGA,OAAH,OACb,yBAAKC,UAAU,2BACb,kBAAC,OAAD,CAAMA,UAAW,eAAgBc,GAAI,KACnC,4BACE,kBAACK,EAAA,EAAD,QAGJ,4BAAQnB,UAAU,iBAAiBoB,KAAK,SAASC,cAAY,WAAWC,cAAY,aAC5EC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBACjE,0BAAMzB,UAAU,yBAElB,yBAAKA,UAAU,2BAA2B0B,GAAG,aAC3C,wBAAI1B,UAAU,cACZ,kBAAC,EAAD,CAASa,MAAO,OAAgBd,OAAQA,EAAUgB,KAAM,MACxD,kBAAC,EAAD,CAASF,MAAO,QAAgBd,OAAQA,EAAUgB,KAAM,WACxD,kBAAC,EAAD,CAASF,MAAO,WAAgBd,OAAQA,EAAUgB,KAAM,cACxD,kBAAC,EAAD,CAASF,MAAO,WAAgBd,OAAQA,EAAUgB,KAAM,cACxD,kBAAC,EAAD,CAASF,MAAO,cAAgBd,OAAQA,EAAUgB,KAAM,iBACxD,kBAAC,EAAD,CAASF,MAAO,OAAgBd,OAAQA,EAAUgB,KAAM,cAUhEG,EAAOS,aAAe,CACpBC,UAAU,IAGGV,Q,8CCHAW,IA9BA,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAUhC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OAC/BF,EAAI,OAYV,OAFAkC,QAAQC,IAAIjC,GAGV,yBAAK2B,GAAI,QACP,kBAAC,IAAD,CAAKb,MAAOf,IACZ,kBAAC,EAAD,CAAQ8B,UAAW/B,EAAKoC,KAAKC,aAAarB,MAAOd,OAAQA,IACzD,yBAAKC,UAAW,aACd,wBAAIA,UAAW,kBAAmBF,GAClC,8BAAOgC,IAET,kBAAC,IAAD,S","file":"component---src-pages-about-js-212133542d2f5fca4c5f.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport {graphql} from \"gatsby\"\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../css/index.css'\nimport '../css/about.css'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {faEnvelope} from \"@fortawesome/free-solid-svg-icons\"\nimport {faTwitter, faGithub, faFacebook} from \"@fortawesome/free-brands-svg-icons\"\n\nconst ResearchIndexPage = ({data}) => (\n  <Layout pageTitle={'About Me'} active={\"About\"}>\n    <p>I picked up programming after joining my highschool FIRST robotics team in 2014, and quickly fell in love with software development. I progressed from writing simple autonomous control programs for my team's annual robot, to designing websites in raw HTML, CSS, and javascript (this sounds like a downgrade, but I can assure you it's not), in the good ol' days before React, Vue, Node, and the rest of the modern javascript ecosystem emerged. I continued to develop websites and even a few mobile apps for the next four years of high school.</p>\n    <p>In August 2017, I started at the University of Miami as a marine science and computer science double major. I have loved the ocean and all of the wildlife in it for as long as I can remember, and UM provided one of the very few programs where I could follow that passion in addition to the more stable field of computer science. I quickly found that my computational background and development skills were highly sought after in the ocean sciences domain, and so I began my journey into developing software for applications in the sciences.</p>\n    <p>Outside of programming and science, I greatly enjoy traveling to and experiencing each of America's National Parks, which make up a majority of my body of photographic work. I also spend extensive time reading (mostly science fiction and fantasy, but I throw some environmental non-fiction in there to mix things up every once in a while) and watching NHL hockey (Let's Go Blues!).</p>\n    <div className={\"separate\"}>\n      <h3>Contact me</h3>\n      <div className={\"inline\"}>\n        <a href={\"mailto:joshuazahner@gmail.com\"} className={\"social-link\"}>\n          <FontAwesomeIcon icon={faEnvelope} size={\"2x\"}/>\n        </a>\n        <a href={\"https://twitter.com/JoshuaZahner\"} className={\"social-link\"}>\n          <FontAwesomeIcon icon={faTwitter} size={\"2x\"}/>\n        </a>\n        <a href={\"https://github.com/Ovec8hkin\"} className={\"social-link\"}>\n          <FontAwesomeIcon icon={faGithub} size={\"2x\"}/>\n        </a>\n        <a href={\"https://www.facebook.com/joshua.zahner.7\"} className={\"social-link\"}>\n          <FontAwesomeIcon icon={faFacebook} size={\"2x\"}/>\n        </a>\n      </div>\n    </div>\n  </Layout>\n)\n\nexport default ResearchIndexPage\n\nexport const pageQuery = graphql`\n  query{\n    allMarkdownRemark(\n      sort: {order: ASC, fields: [frontmatter___title]}\n      filter: {fileAbsolutePath: {regex: \"/(research)/\"  }}\n    ){\n      edges {\n        node {\n          frontmatter{\n            path\n            title\n            tags\n            blurb\n            path\n            image {\n              childImageSharp {\n                sizes(maxWidth: 1140) {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport '../css/header.css'\nimport StyledName from \"./StyledName\"\n\nclass NavItem extends React.Component {\n  render() {\n    return (\n      <li className=\"nav-item\">\n        <Link className={`nav-link ${this.props.active === this.props.title ? \"bold\" : \"\"}`}\n              to={this.props.link}>{this.props.title}</Link>\n      </li>\n    )\n  }\n}\n\nconst Header = ({ active }) => (\n  <nav className=\"navbar navbar-expand-lg\">\n    <Link className={\"navbar-brand\"} to={\"#\"}>\n      <h3>\n        <StyledName />\n      </h3>\n    </Link>\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul className=\"navbar-nav\">\n        <NavItem title={\"Home\"}         active={active}   link={\"/\"}/>\n        <NavItem title={\"About\"}        active={active}   link={\"/about\"}/>\n        <NavItem title={\"Research\"}     active={active}   link={\"/research\"}/>\n        <NavItem title={\"Software\"}     active={active}   link={\"/software\"}/>\n        <NavItem title={\"Photography\"}  active={active}   link={\"/photography\"}/>\n        <NavItem title={\"Blog\"}         active={active}   link={\"/blog\"}/>\n      </ul>\n    </div>\n  </nav>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"../css/layout.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport SEO from \"./seo\"\nimport Footer from \"./footer\"\n\nconst Layout = ({ children, pageTitle, active }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  console.log(active)\n\n  return (\n    <div id={\"root\"}>\n      <SEO title={pageTitle} />\n      <Header siteTitle={data.site.siteMetadata.title} active={active}/>\n      <div className={\"container\"}>\n        <h1 className={'display-5 bold'}>{pageTitle}</h1>\n        <main>{children}</main>\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}