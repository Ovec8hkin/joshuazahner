{"version":3,"sources":["webpack:///./src/components/ImageItem.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/software.js"],"names":["ImageItem","render","className","src","this","props","image","projectTitle","tags","map","value","index","key","projectBlurb","to","link","moretext","React","Component","NavItem","active","title","Header","StyledName","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","defaultProps","siteTitle","Layout","children","pageTitle","data","console","log","site","siteMetadata","SoftwareIndexPage","allMarkdownRemark","edges","software","node","frontmatter","blurb","childImageSharp","sizes","path","pageQuery"],"mappings":"iJAGMA,E,gLACJC,OAAA,WACE,OAAO,yBAAKC,UAAW,mBACrB,yBAAKA,UAAW,WAAYC,IAAKC,KAAKC,MAAMC,QAC5C,yBAAKJ,UAAW,oBACd,4BAAKE,KAAKC,MAAME,cAChB,6BACA,wBAAIL,UAAU,0BAGVE,KAAKC,MAAMG,KAAKC,KAAI,SAACC,EAAOC,GAC1B,OAAO,wBAAIT,UAAU,WAAWU,IAAKD,GACnC,uBAAGT,UAAU,mBAAoBQ,QAMzC,2BAAIN,KAAKC,MAAMQ,cACf,kBAAC,OAAD,CAAMC,GAAIV,KAAKC,MAAMU,KAAMb,UAAW,0BAA2BE,KAAKC,MAAMW,UAAY,iB,GAnBxEC,IAAMC,WAyBflB,O,kJCrBTmB,E,gLACJlB,OAAA,WACE,OACE,wBAAIC,UAAU,YACZ,kBAAC,OAAD,CAAMA,UAAS,aAAcE,KAAKC,MAAMe,SAAWhB,KAAKC,MAAMgB,MAAQ,OAAS,IACzEP,GAAIV,KAAKC,MAAMU,MAAOX,KAAKC,MAAMgB,S,GALzBJ,IAAMC,WAWtBI,EAAS,SAAC,GAAD,IAAGF,EAAH,EAAGA,OAAH,OACb,yBAAKlB,UAAU,2BACb,kBAAC,OAAD,CAAMA,UAAW,eAAgBY,GAAI,KACnC,4BACE,kBAACS,EAAA,EAAD,QAGJ,4BAAQrB,UAAU,iBAAiBsB,KAAK,SAASC,cAAY,WAAWC,cAAY,aAC5EC,gBAAc,YAAYC,gBAAc,QAAQC,aAAW,qBACjE,0BAAM3B,UAAU,yBAElB,yBAAKA,UAAU,2BAA2B4B,GAAG,aAC3C,wBAAI5B,UAAU,cACZ,kBAAC,EAAD,CAASmB,MAAO,OAAgBD,OAAQA,EAAUL,KAAM,MACxD,kBAAC,EAAD,CAASM,MAAO,QAAgBD,OAAQA,EAAUL,KAAM,WACxD,kBAAC,EAAD,CAASM,MAAO,WAAgBD,OAAQA,EAAUL,KAAM,cACxD,kBAAC,EAAD,CAASM,MAAO,WAAgBD,OAAQA,EAAUL,KAAM,cACxD,kBAAC,EAAD,CAASM,MAAO,cAAgBD,OAAQA,EAAUL,KAAM,iBACxD,kBAAC,EAAD,CAASM,MAAO,OAAgBD,OAAQA,EAAUL,KAAM,cAUhEO,EAAOS,aAAe,CACpBC,UAAU,IAGGV,Q,8CCHAW,IA9BA,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,UAAWf,EAAa,EAAbA,OAC/BgB,EAAI,OAYV,OAFAC,QAAQC,IAAIlB,GAGV,yBAAKU,GAAI,QACP,kBAAC,IAAD,CAAKT,MAAOc,IACZ,kBAAC,EAAD,CAAQH,UAAWI,EAAKG,KAAKC,aAAanB,MAAOD,OAAQA,IACzD,yBAAKlB,UAAW,aACd,wBAAIA,UAAW,kBAAmBiC,GAClC,8BAAOD,IAET,kBAAC,IAAD,S,uLCtCN,kIAiCeO,UApBW,SAAC,GAAD,IAAEL,EAAF,EAAEA,KAAF,OACxB,kBAAC,IAAD,CAAQD,UAAW,WAAYf,OAAQ,YACrC,wbAIA,yBAAKlB,UAAW,kDACbkC,EAAKM,kBAAkBC,MAAMlC,KAAI,SAAAmC,GAEhC,OADAR,EAAOQ,EAASC,KAAKC,YACd,kBAAC,IAAD,CAAWvC,aAAc6B,EAAKf,MACnBR,aAAcuB,EAAKW,MACnBzC,MAAO8B,EAAK9B,MAAM0C,gBAAgBC,MAAM9C,IACxCK,KAAM4B,EAAK5B,KACXO,KAAMqB,EAAKc,aAS9B,IAAMC,EAAS,c","file":"component---src-pages-software-js-210ec5b0d44fd1f86d8b.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nclass ImageItem extends React.Component {\n  render() {\n    return <div className={\"item item-image\"}>\n      <img className={\"img-head\"} src={this.props.image}/>\n      <div className={\"container-padded\"}>\n        <h3>{this.props.projectTitle}</h3>\n        <hr/>\n        <ul className=\"nav nav-pills nav-fill\">\n\n          {\n            this.props.tags.map((value, index) => {\n              return <li className=\"nav-item\" key={index}>\n                <p className=\"nav-link active\" >{value}</p>\n              </li>\n            })\n          }\n\n        </ul>\n        <p>{this.props.projectBlurb}</p>\n        <Link to={this.props.link} className={\"btn btn-primary btn-sm\"}>{this.props.moretext || \"Learn More\"}</Link>\n      </div>\n    </div>\n  }\n}\n\nexport default ImageItem","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport '../css/header.css'\nimport StyledName from \"./StyledName\"\n\nclass NavItem extends React.Component {\n  render() {\n    return (\n      <li className=\"nav-item\">\n        <Link className={`nav-link ${this.props.active === this.props.title ? \"bold\" : \"\"}`}\n              to={this.props.link}>{this.props.title}</Link>\n      </li>\n    )\n  }\n}\n\nconst Header = ({ active }) => (\n  <nav className=\"navbar navbar-expand-lg\">\n    <Link className={\"navbar-brand\"} to={\"#\"}>\n      <h3>\n        <StyledName />\n      </h3>\n    </Link>\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul className=\"navbar-nav\">\n        <NavItem title={\"Home\"}         active={active}   link={\"/\"}/>\n        <NavItem title={\"About\"}        active={active}   link={\"/about\"}/>\n        <NavItem title={\"Research\"}     active={active}   link={\"/research\"}/>\n        <NavItem title={\"Software\"}     active={active}   link={\"/software\"}/>\n        <NavItem title={\"Photography\"}  active={active}   link={\"/photography\"}/>\n        <NavItem title={\"Blog\"}         active={active}   link={\"/blog\"}/>\n      </ul>\n    </div>\n  </nav>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"../css/layout.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport SEO from \"./seo\"\nimport Footer from \"./footer\"\n\nconst Layout = ({ children, pageTitle, active }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  console.log(active)\n\n  return (\n    <div id={\"root\"}>\n      <SEO title={pageTitle} />\n      <Header siteTitle={data.site.siteMetadata.title} active={active}/>\n      <div className={\"container\"}>\n        <h1 className={'display-5 bold'}>{pageTitle}</h1>\n        <main>{children}</main>\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport {graphql} from \"gatsby\"\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../css/index.css'\nimport '../css/item.css'\n\nimport ImageItem from \"../components/ImageItem\"\n\n\n\nconst SoftwareIndexPage = ({data}) => (\n  <Layout pageTitle={'Software'} active={\"Software\"}>\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus eu pharetra sem. Integer imperdiet nisi\n      dapibus turpis volutpat sagittis. Nunc eleifend nisl nunc, quis vestibulum ante convallis eu. Sed in est in dolor\n      luctus scelerisque. Phasellus lorem lorem, commodo in efficitur eu, vehicula non augue. Nam elementum nisi sed\n      orci blandit, sed placerat est lacinia. Etiam fringilla euismod pellentesque.</p>\n    <div className={\"container-fluid container-hz separate item-box\"}>\n      {data.allMarkdownRemark.edges.map(software => {\n        data = software.node.frontmatter\n        return <ImageItem projectTitle={data.title}\n                          projectBlurb={data.blurb}\n                          image={data.image.childImageSharp.sizes.src}\n                          tags={data.tags}\n                          link={data.path}\n        />\n      })}\n    </div>\n  </Layout>\n)\n\nexport default SoftwareIndexPage\n\nexport const pageQuery = graphql`\n  query{\n    allMarkdownRemark(\n      sort: {order: ASC, fields: [frontmatter___title]}\n      filter: {fileAbsolutePath: {regex: \"/(software)/\"  }}\n    ){\n      edges {\n        node {\n          frontmatter{\n            path\n            title\n            tags\n            blurb\n            path\n            image {\n              childImageSharp {\n                sizes(maxWidth: 1140) {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}